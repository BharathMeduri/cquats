#
# Kconfig [for CQuATS]
# For a description of the syntax of this configuration file,
# see Documentation/kbuild/kconfig-language.txt.
#
mainmenu "CQuATS Configuration"

#======================================================================
menu "Userland Tools"

 #======================================================================
 menu "Static Analysis Tools"

  config TARGET_SRC_STATIC
	string "Enter location of the source tree target here"
	help
	  This is the source tree which will be parsed by the static analysis and
	  (some of) the infosec tools. It need not only be the root folder of the
	  codebase; it could be a sub-folder too..
	  TIP: do Not use metacharacters (like '~') in the pathname!

   config COCCINELLE
	bool "Static Analysis: Coccinelle" #if KERNEL_SRC != NULL
	default n
	help
	  Invoke the Coccinelle static analyser on the selected codebase.
	  Note that Coccinelle will only be able to parse 'C' (and .h) files.

   config KERNEL_SRC_COCCINELLE #if TARGET_SRC_STATIC != NULL
	string "Enter location of a kernel source tree here (see Help, required for Coccinelle!)"
    #depends on COCCINELLE
	default "/lib/modules/$(uname -r)/build/"
	help
	  Enter location of the kernel source tree. This is required for the
	  CONFIG_COCCINELLE option to function correctly (as it depends upon
	  scripts under the <kernel_src>/scripts/coccinelle/ .
	  TIP: (a) When the default value: Replace the '$(uname -r)' with the output
	  of that shell command; IOW, put the current kernel version there.
	  (Also, realize this assumes you have the kernel-headers / kernel-devel
	  package(s) installed).
	  (b) Selecting a kernel ver <= 4.4 Linux seems to work better..

 config SPARSE
	bool "Static Analysis: Sparse"
	default n
	help
	  Invoke the sparse static analyser on the selected codebase.

 endmenu  # Static Analysis Tools
 #======================================================================

 menu "Dynamic Analysis Tools"

  choice
    prompt "Run Valgrind on a given App or via an already-existing script?"
	default VALGRIND_VIA_APP

    config VALGRIND_VIA_APP
	 bool "Run valgrind on a given app"
	 default Y

     config VALGRIND_VIA_SCRIPT
      bool "script"
	  default N
   endchoice

if VALGRIND_VIA_APP="Y"
    config VALGRIND_VIA_APP
	 string "Enter pathname to and parameters to pass, to the target application being checked"
	 help
	  This is the target app with all parameters as required, that will be analysed
	  by the Valgrind tool(s).
	  TIP: do Not use metacharacters (like '~') in the pathname!
endif
if VALGRIND_VIA_SCRIPT="Y"
    config VALGRIND_VIA_SCRIPT
	 string "Enter pathname to the script that will invoke Valgrind (etc)"
	 help
	  This is the (already existing) script. Often, the project might already have
	  some pre-existing script(s) that will invoke the required valgrind (etc) test
	  cases. If this is the case, specify the full pathname (and any parameters) to
	  that script here, else ignore this option.
	  TIP: do Not use metacharacters (like '~') in the pathname!
endif

    config VALGRIND_MEMCHECK
 	 bool "Dynamic Analysis: Valgrind : MemCheck Tool"
 	 default n
	 help
	  Invoke the Valgrind:memcheck dynamic memory analyser on the selected app.

    config VALGRIND_HELGRIND
 	 bool "Dynamic Analysis: Valgrind : Helgrind Tool"
	 default n
	 help
	  Invoke the Valgrind:helgrind dynamic memory analyser for data races on
	  multithreaded - on the selected app.

    config VALGRIND_CACHEGRIND
	 bool "Dynamic Analysis: Valgrind : Cachegrind Tool"
	 default n
	 help
	  Invoke the Valgrind:cachegrind dynamic cache memory usage profiler
	  on the selected app.

    config VALGRIND_CALLGRIND
 	 bool "Dynamic Analysis: Valgrind : Callgrind Tool"
	 default n
	 help
	  Invoke the Valgrind:callgrind dynamic profiler on the selected app.

 endmenu  # Dynamic Analysis Tools
 #======================================================================

 #======================================================================
 menu "InfoSec - Security Analysers"

   config FLAWFINDER
	bool "InfoSec: FlawFinder"
	default n
	help
	  Invoke the FlawFinder static analyser for security issues on the selected codebase.

#   config CHECKSEC
#	bool "InfoSec: the checksec.sh script"
#	default n
#	help
#	  Invoke the checksec bash script on the selected codebase.

 endmenu  # InfoSec
 #======================================================================

endmenu  # top-level

